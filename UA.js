// Generated by CoffeeScript 1.6.2
var UA, root,
  __slice = [].slice;

root = typeof exports !== "undefined" && exports !== null ? exports : this;

root["class"] = UA = (function() {
  UA.prototype.page = null;

  UA.prototype.steps = null;

  UA.prototype.step = null;

  UA.prototype.verbose = false;

  UA.prototype.retryTimeout = 100;

  UA.prototype.waitTimeout = 5000;

  function UA() {
    var _this = this;
    this.steps = [];
    this.page = require("webpage").create();
    this.page.onResourceRequested = function(r) {
      if (_this.verbose) {
        return _this.debug("request() " + r.url);
      }
    };
    this.page.onLoadFinished = function(r) {
      return _this.nextStep("onLoadFinished");
    };
    this.page.onConsoleMessage = function(msg) {
      if (_this.verbose) {
        return _this.debug("CONSOLE: " + msg);
      }
    };
    this.page.onError = function(msg) {
      return _this.debug("CLIENT: " + msg);
    };
    this.page.viewportSize = {
      width: 1024,
      height: 768
    };
  }

  UA.prototype.debug = function() {
    var args;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return console.log(args.join(" "));
  };

  UA.prototype.nextStep = function() {
    var args;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    if (this.step) {
      this.debug("OK:", this.step.desc);
    }
    this.step = this.steps.shift();
    if (this.step) {
      return this.step.fn.call(this, args);
    } else {
      return this.onStepComplete();
    }
  };

  UA.prototype.then = function(desc, fn) {
    return this.steps.push({
      fn: fn,
      desc: desc
    });
  };

  UA.prototype.cleanup = function() {
    var fs;
    fs = require("fs");
    return fs.removeTree(this.page.offlineStoragePath);
  };

  UA.prototype.exit = function() {
    this.cleanup();
    return phantom.exit();
  };

  UA.prototype.onError = function(msg) {
    this.debug("ERROR: " + msg);
    return this.exit();
  };

  UA.prototype.onTimeout = function() {
    if (this.step) {
      this.debug("TIMEOUT:", this.step.desc);
    }
    return this.exit();
  };

  UA.prototype.onStepComplete = function() {
    return this.exit();
  };

  return UA;

})();
